<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.mapper.AndMemberMapper">

	<resultMap id="alarmLogResult" type="kr.co.model.AlarmLogVO">
		<id property="ALARM_ID" column="ALARM_ID"/>
		<result property="TIME" column="TIME"/>
		<result property="STATE" column="STATE"/>
		<result property="MEMBER_ID" column="MEMBER_ID"/>
		<result property="CATEGORY_ID" column="CATEGORY_ID"/>
		<!-- AlarmTypeVO에 대한 매핑 -->
		<association property="typeVO" javaType="kr.co.model.AlarmTypeVO">
			<id property="CATEGORY_ID" column="CATEGORY_ID"/>
			<result property="TITLE" column="TITLE"/>
			<result property="CONTENT" column="CONTENT"/>
		</association>
	</resultMap>

<select id="alarmLog" resultMap="alarmLogResult">
	select alarm_id, time, state , title,content From AlarmLog
		left join ALARM_TYPE  using ( category_id)
	where member_id = #{member_id} and state = 'n'
</select>


	<select id="memberList" resultType="kr.co.model.MemberVO">
		SELECT * FROM MEMBER
	</select>
	<select id="login" resultType="kr.co.model.MemberVO">
		SELECT * FROM MEMBER WHERE EMAIL = #{EMAIL}
	</select>
	<select id="idcheck" resultType="String">
		SELECT COUNT(*) FROM MEMBER WHERE EMAIL = #{EMAIL}
	</select>
	<insert id="join" >
		INSERT INTO MEMBER (EMAIL, GUARDIAN_ID, PW, NAME, PHONE,  GENDER, BLOOD,  ADDRESS, ADDRESS_DETAIL, SOCIAL, TOKEN)
		VALUES (#{EMAIL}, #{GUARDIAN_ID}, #{PW}, #{NAME}, #{PHONE}, #{GENDER}, #{BLOOD}, #{ADDRESS}, #{ADDRESS_DETAIL},#{SOCIAL}, #{TOKEN})
	</insert>

	<select id="findid" resultType="String">
		SELECT EMAIL FROM MEMBER WHERE NAME = #{NAME} AND PHONE = #{PHONE}
	</select>
	<select id="findpw" resultType="String">
		SELECT COUNT(*) FROM MEMBER WHERE EMAIL=#{EMAIL} AND NAME = #{NAME} AND PHONE = #{PHONE}
	</select>

	<update id="resetpw">
		UPDATE MEMBER SET PW = #{PW} WHERE EMAIL = #{EMAIL}
	</update>
	<select id= "socialIdCheck" resultType="String">
		SELECT COUNT(*) FROM MEMBER WHERE SOCIAL = #{SOCIAL}
	</select>
	<select id="socialLogin" resultType="kr.co.model.MemberVO">
		SELECT * FROM MEMBER WHERE SOCIAL = #{SOCIAL}
	</select>
	<select id="partnerCheck" resultType="String">
		SELECT COUNT(*) FROM MEMBER WHERE EMAIL = #{partner_id}
	</select>
	<update id="patientRegister">
		update member SET GUARDIAN_ID = (SELECT MEMBER_ID
										 FROM MEMBER
										 WHERE EMAIL = #{EMAIL}) where EMAIL = #{GUARDIAN_ID}
	</update>

	<update id="modify">
		UPDATE MEMBER SET PW=#{PW} , NAME=#{NAME},PHONE=#{PHONE},ADDRESS=#{ADDRESS} ,ADDRESS_DETAIL=#{ADDRESS_DETAIL}  WHERE MEMBER_ID=#{MEMBER_ID}
	</update>
	<update id="updateToken">
		UPDATE MEMBER SET token=#{token} WHERE MEMBER_ID=#{MEMBER_ID}
	</update>
	<select id="type" resultType = "kr.co.and.firebase.TypeVO">
		select * from alarm_type where category_id = #{category_id}
	</select>
	<select id="guardian" resultType="kr.co.model.MemberVO">
		SELECT * FROM member WHERE member_id = #{GUARDIAN_ID}
	</select>
	<insert id="insertCondition">
		insert into CONDITIONS (CONDITION_PULSE, CONDITION_TEMPERATURE, CONDITION_ACCIDENT, MEMBER_ID) values (#{CONDITION_PULSE}, #{CONDITION_TEMPERATURE},#{CONDITION_ACCIDENT}, #{MEMBER_ID})
	</insert>
	<insert id="insertAlarm">
		insert into Alarmlog (MEMBER_ID, CATEGORY_ID) values (#{MEMBER_ID}, #{CATEGORY_ID})
	</insert>
	<insert id="insertAlarmG">
		insert into Alarmlog (MEMBER_ID, CATEGORY_ID) values (#{GUARDIAN_ID}, #{CATEGORY_ID})
	</insert>
	<update id="updateAlarm">
		UPDATE Alarmlog SET state='y' WHERE MEMBER_ID=#{MEMBER_ID} and alarm_id=#{alarm_id}
	</update>

	<insert id="insertDisease">
		insert into MEMBER_DISEASES (MEMBER_ID, DISEASE_NAME, DESCRIPTION) values (#{MEMBER_ID}, #{DISEASE_NAME}, #{DESCRIPTION})
	</insert>

	<select id="hospital" resultType="kr.co.model.HospitalVO">
		SELECT * FROM hospitals WHERE name LIKE '%'|| #{name}|| '%'
	</select>

	<select id="doctors" resultType="String">
		select doctor_name from member_hospitals where member_id =#{MEMBER_ID} and hospital_id =#{hospital_id};
	</select>


	<select id="condition" resultType="HashMap">
		SELECT CONDITION_PULSE, condition_time, CONDITION_TEMPERATURE
		FROM CONDITIONS
		WHERE member_id = #{id}
		  AND condition_time = (
			SELECT MAX(condition_time)
			FROM CONDITIONS
			WHERE member_id = #{id}
		)
	</select>


</mapper>